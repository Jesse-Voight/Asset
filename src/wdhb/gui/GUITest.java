/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wdhb.gui;

import java.awt.Component;
import java.awt.Event;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Window;
import java.awt.event.KeyEvent;
import wdhb.util.DatabaseAccess;
import java.util.ArrayList;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import wdhb.util.BetterTableModel;
import wdhb.util.ComboObject;

/**
 *
 * @author JessVoig
 */
public class GUITest extends javax.swing.JFrame {

    public GUITest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aboutDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        userDialog = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        userHistoryTable = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        loginScreen = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        pcEditDialog = new javax.swing.JDialog();
        pcNameLabel = new javax.swing.JLabel();
        serialNumberField = new javax.swing.JTextField();
        assetNumberField = new javax.swing.JTextField();
        notesField = new javax.swing.JTextField();
        commonUsersField = new javax.swing.JTextField();
        replaceDateField = new javax.swing.JTextField();
        locationCombo = new javax.swing.JComboBox();
        pcModelCombo = new javax.swing.JComboBox();
        monitorCombo1 = new javax.swing.JComboBox();
        monitorCombo2 = new javax.swing.JComboBox();
        statusCombo = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        monitorTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        monitorModelTable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        locationTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        pcModelTable = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        decommissionCheck = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();

        aboutDialog.setTitle("About");
        aboutDialog.setAlwaysOnTop(true);
        aboutDialog.setForeground(new java.awt.Color(0, 153, 153));
        aboutDialog.setLocationByPlatform(true);
        aboutDialog.setMinimumSize(new java.awt.Dimension(340, 195));
        aboutDialog.setResizable(false);

        jLabel1.setText("Made by Jesse Voight");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Version 0.11");

        jButton7.setText("Close");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel3.setText("WDHB Asset Manager");

        jLabel4.setText("Database by Dave King");

        javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7))
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 29, Short.MAX_VALUE)))
                .addContainerGap())
        );
        aboutDialogLayout.setVerticalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton7)
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );

        userDialog.setMinimumSize(new java.awt.Dimension(440, 430));
        userDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                userDialogWindowActivated(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("User History -");

        userLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        userLabel.setText("user");

        userHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "ID PC", "Name", "Date", "cFree"
            }
        ));
        jScrollPane7.setViewportView(userHistoryTable);

        jButton9.setText("Close");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userDialogLayout = new javax.swing.GroupLayout(userDialog.getContentPane());
        userDialog.getContentPane().setLayout(userDialogLayout);
        userDialogLayout.setHorizontalGroup(
            userDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton9)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userDialogLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userLabel))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                .addContainerGap())
        );
        userDialogLayout.setVerticalGroup(
            userDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(userLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton9)
                .addContainerGap())
        );

        jInternalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ICT Asset Manager", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10), java.awt.Color.pink)); // NOI18N
        jInternalFrame1.setTitle("ICT Asset Manager");
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        loginScreen.setMinimumSize(new java.awt.Dimension(310, 170));
        loginScreen.addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                loginScreenWindowLostFocus(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N
        jLabel6.setText("WDHB ICT Asset Login");

        jTextField2.setText("Username");

        jPasswordField1.setText("jPasswordField1");

        jButton11.setText("Submit");

        jButton12.setText("Cancel");

        javax.swing.GroupLayout loginScreenLayout = new javax.swing.GroupLayout(loginScreen.getContentPane());
        loginScreen.getContentPane().setLayout(loginScreenLayout);
        loginScreenLayout.setHorizontalGroup(
            loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginScreenLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(69, Short.MAX_VALUE))
                    .addGroup(loginScreenLayout.createSequentialGroup()
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton11)
                            .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton12)
                        .addGap(48, 48, 48))))
        );
        loginScreenLayout.setVerticalGroup(
            loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(30, 30, 30)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pcEditDialog.setMaximumSize(new java.awt.Dimension(530, 590));
        pcEditDialog.setMinimumSize(new java.awt.Dimension(530, 590));
        pcEditDialog.setPreferredSize(new java.awt.Dimension(530, 590));
        pcEditDialog.setResizable(false);

        pcNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        pcNameLabel.setText("Asset");

        serialNumberField.setText("Serial Number");

        assetNumberField.setText("Asset Number");

        notesField.setText("Notes");

        commonUsersField.setText("Common Users");

        replaceDateField.setText("Replace Date");

        locationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        locationCombo.setLightWeightPopupEnabled(false);
        locationCombo.setMaximumSize(new java.awt.Dimension(350, 24));
        locationCombo.setMinimumSize(new java.awt.Dimension(350, 24));
        locationCombo.setName(""); // NOI18N
        locationCombo.setPreferredSize(new java.awt.Dimension(350, 20));

        pcModelCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        monitorCombo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        monitorCombo2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        statusCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Location");

        jLabel8.setText("PC Model");

        jLabel9.setText("Serial Number");

        jLabel10.setText("Monitor 1");

        jLabel11.setText("Monitor 2");

        jLabel12.setText("Asset Number");

        jLabel13.setText("Notes");

        jLabel14.setText("Status");

        jLabel15.setText("Common Users");

        jLabel16.setText("Replacement Date");

        javax.swing.GroupLayout pcEditDialogLayout = new javax.swing.GroupLayout(pcEditDialog.getContentPane());
        pcEditDialog.getContentPane().setLayout(pcEditDialogLayout);
        pcEditDialogLayout.setHorizontalGroup(
            pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcEditDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pcEditDialogLayout.createSequentialGroup()
                        .addComponent(pcNameLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pcEditDialogLayout.createSequentialGroup()
                        .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pcEditDialogLayout.createSequentialGroup()
                                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addGap(78, 78, 78)
                                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pcModelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pcEditDialogLayout.createSequentialGroup()
                                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addGap(34, 34, 34)
                                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(monitorCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(serialNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monitorCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(assetNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(notesField, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(commonUsersField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(replaceDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pcEditDialogLayout.setVerticalGroup(
            pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcEditDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pcNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pcModelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monitorCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monitorCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assetNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commonUsersField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcEditDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(replaceDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ICT Asset Manager");
        setForeground(java.awt.Color.pink);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        resultsTable.setAutoCreateRowSorter(true);
        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "IdPC", "Name", "IDLocation", "IDPCModel", "SerialNo", "Monitor1", "Monitor2", "AssetNo", "LastLogin", "Notes", "Status", "RepDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resultsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(resultsTable);

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setText("Enter Text Here");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton8.setText("Find Value");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 492, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(534, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                    .addGap(59, 59, 59)))
        );

        jTab.addTab("PC's", jPanel1);

        monitorTable.setAutoCreateRowSorter(true);
        monitorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Asset", "Serial", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        monitorTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(monitorTable);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTab.addTab("Monitors", jPanel2);

        monitorModelTable.setAutoCreateRowSorter(true);
        monitorModelTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "idMonitorModel", "Make", "Model"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        monitorModelTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(monitorModelTable);

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );

        jTab.addTab("Monitor Models", jPanel3);

        locationTable.setAutoCreateRowSorter(true);
        locationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "idLocation", "Building", "Department", "Address1", "Address2", "Town", "RC"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        locationTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(locationTable);

        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap())
        );

        jTab.addTab("Locations", jPanel4);

        pcModelTable.setAutoCreateRowSorter(true);
        pcModelTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "idPCModel", "Make", "Model", "SubModel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pcModelTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(pcModelTable);

        jButton5.setText("Refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addContainerGap())
        );

        jTab.addTab("PC Model", jPanel5);

        userTable.setAutoCreateRowSorter(true);
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "UserName", "LatestPC"
            }
        ));
        userTable.setGridColor(new java.awt.Color(100, 100, 100));
        userTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(userTable);

        jButton6.setText("Refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton10.setText("View Details");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton10)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton10))
                .addContainerGap())
        );

        jTab.addTab("User History", jPanel6);

        jMenu1.setText("File");
        jMenu1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jMenu1StateChanged(evt);
            }
        });

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        decommissionCheck.setText("Show Decommissioned PCs");
        decommissionCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                decommissionCheckItemStateChanged(evt);
            }
        });
        jMenu1.add(decommissionCheck);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTab)
        );

        jTab.getAccessibleContext().setAccessibleName("Tab1");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // <editor-fold defaultstate="collapsed" desc="Button Action Listeners"> 
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        loadPCs();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadMonitors();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        loadMonitorModel();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        loadLocations();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenu1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jMenu1StateChanged
        //loadPCs();
    }//GEN-LAST:event_jMenu1StateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        loadPCModels();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        loadUsers();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        aboutDialog.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        //jDialog1.setSize(500, 500);
        aboutDialog.setLocation(jMenuBar1.getLocationOnScreen());
        aboutDialog.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenu2MouseClicked

    private void decommissionCheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_decommissionCheckItemStateChanged
        loadPCs();// TODO add your handling code here:
    }//GEN-LAST:event_decommissionCheckItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //jButton8.isDefaultButton();
        //loginScreen.setVisible(true);
        //loginScreen.setModal(true);
        //jTab.setVisible(false);
        loadAll();// TODO add your handling code here: window opened
    }//GEN-LAST:event_formWindowOpened

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        findPC();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField1.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            findPC();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (userTable.getSelectedRow() != -1) {
            userDialog.setVisible(true);
            userDialog.setLocation(jMenuBar1.getLocationOnScreen());
            String userTemp = (String) userTable.getModel().getValueAt(userTable.getSelectedRow(), 0);

            System.out.println(userTemp.toString());
            userLabel.setText(userTemp);
        } else {
            JOptionPane.showMessageDialog(null, "NO USER SELECTED!!!!!!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void userDialogWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_userDialogWindowActivated
        loadUserDetails();
    }//GEN-LAST:event_userDialogWindowActivated

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        userDialog.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void loginScreenWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_loginScreenWindowLostFocus
        // TODO add your handling code here:
    }//GEN-LAST:event_loginScreenWindowLostFocus

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        if (evt.getClickCount() == 2) {
            userHistoryTable.setModel(new DefaultTableModel());
            userDialog.setVisible(true);
            userDialog.setLocation(jMenuBar1.getLocationOnScreen());
            jScrollPane7.getViewport().setViewPosition(new Point(0,0));
            String userTemp = (String) userTable.getModel().getValueAt(userTable.getSelectedRow(), 0);

            System.out.println(userTemp.toString());
            userLabel.setText(userTemp);
        }
    }//GEN-LAST:event_userTableMouseClicked

    private void resultsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsTableMouseClicked
        if (evt.getClickCount() == 2) {
            //Primariliy for displaying all data for editing
            pcEditDialog.setVisible(true);
            pcEditDialog.setLocation(jMenuBar1.getLocationOnScreen());
            String assetTemp = (String) resultsTable.getModel().getValueAt(resultsTable.getSelectedRow(), 1);
            
            //System.out.println(assetTemp); print pc name
            pcNameLabel.setText(assetTemp);
            DefaultComboBoxModel locationComboModel = new DefaultComboBoxModel();    //create combobox models before laoding
            DefaultComboBoxModel pcModelComboModel = new DefaultComboBoxModel();
            DefaultComboBoxModel monitorComboModel = new DefaultComboBoxModel();
            
            
            ArrayList<String[]> loadLocationCombo = DatabaseAccess.loadLocations();
            for (Object locationObject: loadLocationCombo){
                String[] stringArray = (String[])locationObject;
                ComboObject temp = new ComboObject();
                temp.setDescription(stringArray[1] + " " + stringArray[2]);
                temp.setID(stringArray[0]);
                locationComboModel.addElement(temp);
            }
            
            ArrayList<String[]> loadPCModelCombo = DatabaseAccess.loadPCModels();
            for (Object pcModelObject: loadPCModelCombo){
                String[] stringArray = (String[])pcModelObject;
                ComboObject temp = new ComboObject();
                temp.setDescription(stringArray[1] + " " + stringArray[2]);
                temp.setID(stringArray[0]);
                pcModelComboModel.addElement(temp);
            }
            
            ArrayList<String[]> loadMonitorCombo = DatabaseAccess.loadMonitors();
            for (Object monitorObject: loadMonitorCombo){
                String[] stringArray = (String[])monitorObject;
                ComboObject temp = new ComboObject();
                temp.setDescription(stringArray[1]);
                temp.setID(stringArray[0]);
                monitorComboModel.addElement(temp);
            }
            locationCombo.setModel(locationComboModel);
            statusCombo.setModel(new DefaultComboBoxModel(new String[] {"A","D","I","S"}));
            monitorCombo1.setModel(monitorComboModel);
            monitorCombo2.setModel(monitorComboModel);
            pcModelCombo.setModel(pcModelComboModel);
            String pcDataTemp = (String)resultsTable.getModel().getValueAt(resultsTable.getSelectedRow(), 0);
            String[] pcData = DatabaseAccess.loadPCData(pcDataTemp);
            serialNumberField.setText(pcData[2]);
            assetNumberField.setText(pcData[5]);
            replaceDateField.setText(pcData[9]);
            notesField.setText(pcData[7]);
            for (int i = 1; i < locationCombo.getModel().getSize(); i++)
            {
                ComboObject temp = (ComboObject)locationCombo.getModel().getElementAt(i);
                //System.out.println(temp.getID() + " " + pcData[10]);
                if (temp.getID().equals(pcData[10])){
                    locationCombo.setSelectedItem(temp);
                }
            }
            for (int i = 1; i < pcModelCombo.getModel().getSize(); i++){
                ComboObject temp = (ComboObject)pcModelCombo.getModel().getElementAt(i);
                
                if(temp.getID().equals(pcData[11])){
                    pcModelCombo.setSelectedItem(temp);
                }
            }
            /*for (String item: pcData)
            System.out.println(item);*/
        }
    }//GEN-LAST:event_resultsTableMouseClicked
// </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Main"> 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUITest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUITest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUITest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUITest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUITest().setVisible(true);

            }
        });
    }
// </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Generated Variables">     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JTextField assetNumberField;
    private javax.swing.JTextField commonUsersField;
    private javax.swing.JCheckBoxMenuItem decommissionCheck;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTab;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox locationCombo;
    private javax.swing.JTable locationTable;
    private javax.swing.JDialog loginScreen;
    private javax.swing.JComboBox monitorCombo1;
    private javax.swing.JComboBox monitorCombo2;
    private javax.swing.JTable monitorModelTable;
    private javax.swing.JTable monitorTable;
    private javax.swing.JTextField notesField;
    private javax.swing.JDialog pcEditDialog;
    private javax.swing.JComboBox pcModelCombo;
    private javax.swing.JTable pcModelTable;
    private javax.swing.JLabel pcNameLabel;
    private javax.swing.JTextField replaceDateField;
    private javax.swing.JTable resultsTable;
    private javax.swing.JTextField serialNumberField;
    private javax.swing.JComboBox statusCombo;
    private javax.swing.JDialog userDialog;
    private javax.swing.JTable userHistoryTable;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
// </editor-fold>     
    // <editor-fold defaultstate="collapsed" desc="Big Functions">     
    private void loadUsers() {
        // Tricky one to show all users
        String colNames[] = {"UserName", "Last Login"};
        BetterTableModel dtm = new BetterTableModel();
        dtm.setDataVector(null, colNames);
        ArrayList<String[]> qResult = DatabaseAccess.loadUsers();
        userTable.setModel(dtm);
        for (int i = 0; i < qResult.size(); i++) {
            dtm.addRow(new String[2]);
            userTable.getModel().setValueAt(qResult.get(i)[0], i, 0);
            userTable.getModel().setValueAt(qResult.get(i)[1], i, 1);
        }
    }

    private void loadUserDetails() {
        String colNames[] = {"PC", "Name", "Date"};
        ArrayList<String[]> userDetes = DatabaseAccess.loadUserInfo(userLabel.getText());
        BetterTableModel btm = new BetterTableModel();
        btm.setDataVector(null, colNames);
        userHistoryTable.setModel(btm);
        for (int i = 0; i < userDetes.size(); i++) {
            btm.addRow(new String[3]);
            userHistoryTable.getModel().setValueAt(userDetes.get(i)[0], i, 0);
            userHistoryTable.getModel().setValueAt(userDetes.get(i)[1], i, 1);
            userHistoryTable.getModel().setValueAt(userDetes.get(i)[2], i, 2);
        }
    }

    private void loadPCModels() {
        String colNames[] = {"idPCModel", "Make", "Model", "SubModel"};
        BetterTableModel dtm = new BetterTableModel();
        dtm.setDataVector(null, colNames);
        ArrayList<String[]> qResult = DatabaseAccess.loadPCModels();
        pcModelTable.setModel(dtm);
        for (int i = 0; i < qResult.size(); i++) {
            dtm.addRow(new String[4]);
            pcModelTable.getModel().setValueAt(qResult.get(i)[0], i, 0);
            pcModelTable.getModel().setValueAt(qResult.get(i)[1], i, 1);
            pcModelTable.getModel().setValueAt(qResult.get(i)[2], i, 2);
            pcModelTable.getModel().setValueAt(qResult.get(i)[3], i, 3);
        }
    }

    private void findPC() {
        String toFind = jTextField1.getText();// TODO add your handling code here
        for (int x = 0; x < resultsTable.getRowCount(); x++) {
            for (int y = 0; y < resultsTable.getColumnCount(); y++) {
                String tempValue = (String) resultsTable.getValueAt(x, y);
                if (tempValue != null) {
                    if (tempValue.toLowerCase().equals(toFind.toLowerCase())) {
                        System.out.println(tempValue);
                        resultsTable.setRowSelectionInterval(x, x);
                        jScrollPane1.getViewport().setViewPosition(new Point(0, x * resultsTable.getRowHeight()));
                        return;
                    }
                }
            }
        }
    }

    private void loadLocations() {
        String colNames[] = {"idLocation", "Building", "Department", "Address1", "Address2", "Town", "RCode"};
        BetterTableModel dtm = new BetterTableModel();
        dtm.setDataVector(null, colNames);
        ArrayList<String[]> qResult = DatabaseAccess.loadLocations();
        locationTable.setModel(dtm);
        for (int i = 0; i < qResult.size(); i++) {
            dtm.addRow(new String[7]);
            locationTable.getModel().setValueAt(qResult.get(i)[0], i, 0);
            locationTable.getModel().setValueAt(qResult.get(i)[1], i, 1);
            locationTable.getModel().setValueAt(qResult.get(i)[2], i, 2);
            locationTable.getModel().setValueAt(qResult.get(i)[3], i, 3);
            locationTable.getModel().setValueAt(qResult.get(i)[4], i, 4);
            locationTable.getModel().setValueAt(qResult.get(i)[5], i, 5);
            locationTable.getModel().setValueAt(qResult.get(i)[6], i, 6);
        }
    }

    private void loadMonitorModel() {
        String colNames[] = {"idMonitorModel", "Make", "Model"};
        BetterTableModel dtm = new BetterTableModel();
        dtm.setDataVector(null, colNames);
        ArrayList<String[]> qResult = DatabaseAccess.loadMonitorModels();
        monitorModelTable.setModel(dtm);
        for (int i = 0; i < qResult.size(); i++) {
            dtm.addRow(new String[3]);
            monitorModelTable.getModel().setValueAt(qResult.get(i)[0], i, 0);
            monitorModelTable.getModel().setValueAt(qResult.get(i)[1], i, 1);
            monitorModelTable.getModel().setValueAt(qResult.get(i)[2], i, 2);
        }
    }

    private void loadMonitors() {
        String colNames[] = {"Monitorid","Asset", "Serial", "Status", "Notes", "IDMonitorModel", "DateInstalled"};
        BetterTableModel dtm = new BetterTableModel();
        dtm.setDataVector(null, colNames);
        ArrayList<String[]> qResult = DatabaseAccess.loadMonitors();
        monitorTable.setModel(dtm);
        for (int i = 0; i < qResult.size(); i++) {
            dtm.addRow(new String[6]);
            monitorTable.getModel().setValueAt(qResult.get(i)[0], i, 0);
            monitorTable.getModel().setValueAt(qResult.get(i)[1], i, 1);
            monitorTable.getModel().setValueAt(qResult.get(i)[2], i, 2);
            monitorTable.getModel().setValueAt(qResult.get(i)[3], i, 3);
            monitorTable.getModel().setValueAt(qResult.get(i)[4], i, 4);
            monitorTable.getModel().setValueAt(qResult.get(i)[5], i, 5);
            monitorTable.getModel().setValueAt(qResult.get(i)[6], i, 6);
        }
    }

    private void loadPCs() {
        Boolean loadDecom = decommissionCheck.isSelected();
        String colNames[] = {"Id", "Name", "Location", "PCModel", "SerialNumber", "Monitor1", "Monitor2", "AssetNum", "LastLogin",
            "Notes", "Status", "RepDate"};
        BetterTableModel dtm = new BetterTableModel();
        dtm.setDataVector(null, colNames);

        ArrayList<String[]> qResult = DatabaseAccess.loadPCs(loadDecom);
        resultsTable.setModel(dtm);
        for (int i = 0; i < qResult.size(); i++) {
            dtm.addRow(new String[5]);
            resultsTable.getModel().setValueAt(qResult.get(i)[0], i, 0);
            resultsTable.getModel().setValueAt(qResult.get(i)[1], i, 1);
            resultsTable.getModel().setValueAt(qResult.get(i)[2], i, 2);
            resultsTable.getModel().setValueAt(qResult.get(i)[3], i, 3);
            resultsTable.getModel().setValueAt(qResult.get(i)[4], i, 4);
            resultsTable.getModel().setValueAt(qResult.get(i)[5], i, 5);
            resultsTable.getModel().setValueAt(qResult.get(i)[6], i, 6);
            resultsTable.getModel().setValueAt(qResult.get(i)[7], i, 7);
            resultsTable.getModel().setValueAt(qResult.get(i)[8], i, 8);
            resultsTable.getModel().setValueAt(qResult.get(i)[9], i, 9);
            resultsTable.getModel().setValueAt(qResult.get(i)[10], i, 10);
            resultsTable.getModel().setValueAt(qResult.get(i)[11], i, 11);
        }
        resultsTable.getColumnModel().removeColumn(resultsTable.getColumnModel().getColumn(0));
    }

    private void loadAll() {
        loadPCs();
        loadLocations();
        loadMonitorModel();
        loadMonitors();
        loadPCModels();
        loadUsers();
    }
// </editor-fold> 
}
